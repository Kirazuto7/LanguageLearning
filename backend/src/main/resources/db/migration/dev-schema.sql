DO $$
DECLARE
    r RECORD;
BEGIN
    FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = 'public') LOOP
            EXECUTE 'DROP TABLE IF EXISTS ' || quote_ident(r.tablename) || ' CASCADE';
        END LOOP;
END $$;


create table conjugation_examples (created_at timestamp(6) not null default now(), id bigint generated by default as identity, conjugated_form TEXT, example_sentence TEXT, infinitive varchar(255), sentence_translation TEXT, primary key (id));
create table conjugation_lesson_examples (lesson_id bigint not null, example_id bigint not null unique);
create table conjugation_lessons (id bigint not null, conjugation_rule_name varchar(255), explanation TEXT, primary key (id));
create table grammar_lesson_sentences (lesson_id bigint not null, sentence_id bigint not null unique);
create table grammar_lessons (id bigint not null, explanation TEXT, grammar_concept TEXT, primary key (id));
create table lesson_books (created_at timestamp(6) not null default now(), id bigint generated by default as identity, user_id bigint, difficulty varchar(255), language varchar(255), title varchar(255), primary key (id));
create table lesson_chapters (created_at timestamp(6) not null default now(), book_id bigint, id bigint generated by default as identity, native_title varchar(255) not null, title varchar(255) not null, primary key (id));
create table lesson_pages (created_at timestamp(6) not null default now(), id bigint generated by default as identity, lesson_chapter_id bigint, lesson_id bigint unique, primary key (id));
create table lesson_questions (created_at timestamp(6) not null default now(), id bigint generated by default as identity, lesson_id bigint not null, answer TEXT, question_text TEXT, question_type varchar(255) check (question_type in ('MULTIPLE_CHOICE','FREE_FORM')), primary key (id));
create table lessons (created_at timestamp(6) not null default now(), id bigint generated by default as identity, title varchar(255), type varchar(255) check (type in ('VOCABULARY','GRAMMAR','CONJUGATION','PRACTICE','READING_COMPREHENSION')), primary key (id));
create table practice_lessons (id bigint not null, instructions TEXT, primary key (id));
create table question_answer_choices (question_id bigint not null, answer_choice TEXT);
create table reading_comprehension_lessons (id bigint not null, story TEXT, primary key (id));
create table sentences (created_at timestamp(6) not null default now(), id bigint generated by default as identity, text TEXT, translation TEXT, primary key (id));
create table settings (auto_speak_enabled boolean default true not null, created_at timestamp(6) not null default now(), id bigint generated by default as identity, difficulty varchar(255), language varchar(255), mascot varchar(255) not null, theme varchar(255) not null, primary key (id));
create table short_stories (created_at timestamp(6) not null default now(), id bigint generated by default as identity, story_book_id bigint, genre varchar(255), native_title varchar(255) not null, title varchar(255) not null, topic varchar(255), primary key (id));
create table story_books (created_at timestamp(6) not null default now(), id bigint generated by default as identity, user_id bigint, difficulty varchar(255), language varchar(255), title varchar(255), primary key (id));
create table story_pages (created_at timestamp(6) not null default now(), id bigint generated by default as identity, short_story_id bigint, english_summary TEXT, image_url TEXT, type varchar(255) check (type in ('CONTENT','VOCABULARY')), primary key (id));
create table story_paragraphs (paragraph_number integer not null, created_at timestamp(6) not null default now(), id bigint generated by default as identity, story_page_id bigint, content TEXT, words_to_highlight jsonb not null default '[]'::jsonb, primary key (id));
create table story_vocabulary_items (created_at timestamp(6) not null default now(), id bigint generated by default as identity, story_page_id bigint, translation varchar(255), word varchar(255) not null, stem varchar(255) not null, primary key (id));
create table users (created_at timestamp(6) not null default now(), id bigint generated by default as identity, settings_id bigint unique, password varchar(255) not null, username varchar(255) not null unique, email varchar(255) not null unique, refresh_token TEXT, refresh_token_expiry timestamptz(6), primary key (id));
create table vocabulary_lesson_words (lesson_id bigint not null, word_id bigint not null);
create table vocabulary_lessons (id bigint not null, primary key (id));
create table words (created_at timestamp(6) not null default now(), id bigint generated by default as identity, english_translation TEXT not null, language varchar(255) not null, details jsonb, primary key (id));
alter table if exists conjugation_lesson_examples add constraint FK_conjugation_lesson_examples_example foreign key (example_id) references conjugation_examples;
alter table if exists conjugation_lesson_examples add constraint FK_conjugation_lesson_examples_lesson foreign key (lesson_id) references conjugation_lessons;
alter table if exists conjugation_lessons add constraint FK38tvralx9sggqagut8t4sdcj3 foreign key (id) references lessons;
alter table if exists grammar_lesson_sentences add constraint FKp5swjw3r4thggv392p9utulqm foreign key (sentence_id) references sentences;
alter table if exists grammar_lesson_sentences add constraint FKfkj12tr05q4scrym82ghb4kqc foreign key (lesson_id) references grammar_lessons;
alter table if exists grammar_lessons add constraint FKiku87of20ehy5nat5k3eyxr0b foreign key (id) references lessons;
alter table if exists lesson_books add constraint FKaq34h556my3xj1uyhmcdh5p9g foreign key (user_id) references users;
alter table if exists lesson_chapters add constraint FK4n8mf34ts1tw2pmxcgq95gc98 foreign key (book_id) references lesson_books;
alter table if exists lesson_pages add constraint FKf34yriwekstcr137vbct6bk6l foreign key (lesson_id) references lessons;
alter table if exists lesson_pages add constraint FK121yhtjjax5kdf2o0llruvvci foreign key (lesson_chapter_id) references lesson_chapters;
alter table if exists lesson_questions add constraint FKl0a4v5xv61hj4kr7664r07ut0 foreign key (lesson_id) references lessons;
alter table if exists practice_lessons add constraint FK8iq3tjr4iqdr0v789y775pdo7 foreign key (id) references lessons;
alter table if exists question_answer_choices add constraint FKr4beqxc7ll2onu0k2kux71fq2 foreign key (question_id) references lesson_questions;
alter table if exists reading_comprehension_lessons add constraint FK9g4g29tnwvrlrtis6x20ixbfo foreign key (id) references lessons;
alter table if exists short_stories add constraint FK3g024dhd3tkmhfobm4x3s9pgx foreign key (story_book_id) references story_books;
alter table if exists story_books add constraint FK8ce8x1mkoah3kvh1hnt9ofa84 foreign key (user_id) references users;
alter table if exists story_pages add constraint FK7u0vihcdi1qa4ncdii74i2tg5 foreign key (short_story_id) references short_stories;
alter table if exists story_paragraphs add constraint FKmivhc3exlmc0k69rq23uvqtgt foreign key (story_page_id) references story_pages;
alter table if exists story_vocabulary_items add constraint FKog8a7akffx0hg151p6nfwgaa9 foreign key (story_page_id) references story_pages;
alter table if exists users add constraint FKkq8mvg6xlyeewn7xnf0usloiq foreign key (settings_id) references settings;
alter table if exists vocabulary_lesson_words add constraint FKtom5gmk7j9j2twl2jgj3y5vgs foreign key (word_id) references words;
alter table if exists vocabulary_lesson_words add constraint FK8wyxitqffta5mdc13m24kg97f foreign key (lesson_id) references vocabulary_lessons;
alter table if exists vocabulary_lessons add constraint FKhph8a887h0miud0nxrlne4n6b foreign key (id) references lessons;
